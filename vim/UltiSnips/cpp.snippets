snippet var
const ${1:type}& ${2:name}() const;
endsnippet

snippet inc
#include $1
endsnippet

snippet cout
std::cout << $1 << std::endl;
endsnippet

snippet main
//
// `!v GetNSFName(0)`
// Copyright (c) `!v Year()` `!v MyName()`
//

#include <iostream>

int main(int argc, char* argv[])
{
  $0

  return 0;
}
endsnippet

snippet h
//
// `!v GetNSFName(0)`
// Copyright (c) `!v Year()` `!v MyName()`
//

#ifndef `!v GetNSFNameDefine()`
#define `!v GetNSFNameDefine()`
`!v InsertNameSpace(0)`
/**
 * @brief ${1:class description}
 */
class `!v expand('%:t:r')`
{
public:
	`!v expand('%:t:r')`();
	~`!v expand('%:t:r')`();

	$0
private:
};
`!v InsertNameSpace(1)`
#endif // defined(`!v GetNSFNameDefine()`)
endsnippet

snippet hc
//
// `!v GetNSFName(0)`
// Copyright (c) `!v Year()` `!v MyName()`
//
endsnippet

snippet priv
//
// =============================
//        Private Methods
// =============================
//
endsnippet

snippet ns
namespace $1 {
${0:${VISUAL}}
}
endsnippet
